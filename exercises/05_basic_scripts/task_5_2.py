# -*- coding: utf-8 -*-
"""
Задание 5.2

Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Вывод сети и маски должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Подсказка: Получить маску в двоичном формате можно так:
In [1]: "1" * 28 + "0" * 4
Out[1]: '11111111111111111111111111110000'


Ограничение: Все задания надо выполнять используя только пройденные темы.
"""
ip = input("Введите ip и маску в формате x.x.x.x/x: ")
output_ip = 'Network:\n{0:<10}{1:<10}{2:<10}{3:<10}\n{0:08b}  {1:08b}  {2:08b}  {3:08b}'
list_ip = ip.replace('/','.').split('.')[:4]
print(output_ip.format(int(list_ip[0]), int(list_ip[1]), int(list_ip[2]), int(list_ip[3])))
mask = ip.replace('/','.').split('.')[4]
bin_mask = '1' * int(mask) + '0' * (32 - int(mask))
list_bin_mask = [bin_mask[:8], bin_mask[8:16], bin_mask[16:24], bin_mask[24:]]
list_mask = [int(list_bin_mask[0], 2), int(list_bin_mask[1], 2), int(list_bin_mask[2], 2), int(list_bin_mask[3], 2)]
print(f'Mask:\n/{int(mask)}\n{list_mask[0]:<10}{list_mask[1]:<10}{list_mask[2]:<10}{list_mask[3]:<10}\n{list_bin_mask[0]}  {list_bin_mask[1]}  {list_bin_mask[2]}  {list_bin_mask[3]}')
